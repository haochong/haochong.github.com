<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html5 | Haochong]]></title>
  <link href="http://haochong.github.com/blog/categories/html5/atom.xml" rel="self"/>
  <link href="http://haochong.github.com/"/>
  <updated>2013-01-06T16:07:57+08:00</updated>
  <id>http://haochong.github.com/</id>
  <author>
    <name><![CDATA[Haochong.Guo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rumpetroll – 小蝌蚪快点游]]></title>
    <link href="http://haochong.github.com/blog/2010/10/05/introduce-rumpetroll/"/>
    <updated>2010-10-05T00:00:00+08:00</updated>
    <id>http://haochong.github.com/blog/2010/10/05/introduce-rumpetroll</id>
    <content type="html"><![CDATA[<p>这是一个名叫 Rumpetroll 的聊天室。在挪威语里，意思是“蝌蚪”。。。</p>

<p>用鼠标控制四处游动，用键盘输入聊天，输入“name:你的名字” 可以给自己的小蝌蚪起名字。</p>

<!--more-->


<p>因为使用了WebSockets 技术， 所以你懂的。一个结合了Canvas的不错的尝试，让人看到了Web开发的未来，小蝌蚪，快点游！</p>

<p><img src="http://static.paulboxley.com/rumpetroll.png" alt="Rumpetroll" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ipad mobile? 是手机? 不...]]></title>
    <link href="http://haochong.github.com/blog/2010/04/08/is-ipad-mobile/"/>
    <updated>2010-04-08T00:00:00+08:00</updated>
    <id>http://haochong.github.com/blog/2010/04/08/is-ipad-mobile</id>
    <content type="html"><![CDATA[<p>使用UA string 判断 浏览器 是jquery的御用方法</p>

<!--more-->


<p><div>
  <pre>
    <code class='javascript'>&lt;/p&gt;

&lt;p&gt;uaMatch: function( ua ) {
  var ret = { browser: &quot;&quot; };&lt;/p&gt;

&lt;p&gt;  ua = ua.toLowerCase();&lt;/p&gt;

&lt;p&gt;  if ( /webkit/.test( ua ) ) {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ret = { browser: &quot;webkit&quot;, version: /webkit[\/ ]([\w.]+)/ };
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  } else if ( /opera/.test( ua ) ) {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ret = { browser: &quot;opera&quot;, version:  /version/.test( ua ) ? /version[\/ ]([\w.]+)/ : /opera[\/ ]([\w.]+)/ };
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  } else if ( /msie/.test( ua ) ) {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ret = { browser: &quot;msie&quot;, version: /msie ([\w.]+)/ };
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  } else if ( /mozilla/.test( ua ) &amp;amp;&amp;amp; !/compatible/.test( ua ) ) {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ret = { browser: &quot;mozilla&quot;, version: /rv:([\w.]+)/ };
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  }&lt;/p&gt;

&lt;p&gt;  ret.version = (ret.version &amp;amp;&amp;amp; ret.version.exec( ua ) || [0, &quot;0&quot;])[1];&lt;/p&gt;

&lt;p&gt;  return ret;
}&lt;/p&gt;

&lt;p&gt;</code>
  </pre>
</div>
</p>

<p>这方法很方便，也很脆弱，不信的话，可以看看我们亲爱的ipad...</p>

<p>随着ipad的出现，浏览网页的方式似乎出现了新的路，介于手机与电脑之间的，给人一种“特仑苏”的感觉，尤其是当你看到了ipad的UA string 时</p>

<p><code>
Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
</code></p>

<p>请注意后面的Mobile字样！！！</p>

<blockquote>是手机吗？不...
是ipad，不是所有移动设备都叫ipad</blockquote>


<p>诚然，一句</p>

<p><div>
  <pre>
    <code class='javascript'>navigator.userAgent.match(/iPad/i) != null;</code>
  </pre>
</div>
</p>

<p>可以解决问题</p>

<p>但是，那些判断UA string 为mobile的网站呢？
不妨想象一下，那些使用着“大屏幕”的ipad用户访问 www.某网站.com ，却被直接转到针对手机设计的 m.某网站.com 时的心情...</p>

<p>没有标准的useragent ， 在如今的web海域中，还要漂泊多久？</p>
]]></content>
  </entry>
  
</feed>
